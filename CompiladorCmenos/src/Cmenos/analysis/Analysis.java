/* This file was generated by SableCC (http://www.sablecc.org/). */

package Cmenos.analysis;

import Cmenos.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAPrograma(APrograma node);
    void caseAVariavelDecDeclaracao(AVariavelDecDeclaracao node);
    void caseAFuncaoDecDeclaracao(AFuncaoDecDeclaracao node);
    void caseAMainDeclaracao(AMainDeclaracao node);
    void caseAVazioDeclaracao(AVazioDeclaracao node);
    void caseATVoidTipo(ATVoidTipo node);
    void caseATIntTipo(ATIntTipo node);
    void caseATStrTipo(ATStrTipo node);
    void caseANormalParametro(ANormalParametro node);
    void caseAVazioParametro(AVazioParametro node);
    void caseACompostoDec(ACompostoDec node);
    void caseAExpressaoComando(AExpressaoComando node);
    void caseAComandosComando(AComandosComando node);
    void caseAIfComando(AIfComando node);
    void caseAIfThenElseComando(AIfThenElseComando node);
    void caseABlocoWhileComando(ABlocoWhileComando node);
    void caseARetornoComando(ARetornoComando node);
    void caseARetornoVazioComando(ARetornoVazioComando node);
    void caseAExpressaoExpressaoDec(AExpressaoExpressaoDec node);
    void caseAVazioExpressaoDec(AVazioExpressaoDec node);
    void caseAAtribuicaoExpressao(AAtribuicaoExpressao node);
    void caseAAtribuicaoStrExpressao(AAtribuicaoStrExpressao node);
    void caseASimplesExpressao(ASimplesExpressao node);
    void caseAVazioExpressao(AVazioExpressao node);
    void caseAIdSimplesVar(AIdSimplesVar node);
    void caseAIdArrayVar(AIdArrayVar node);
    void caseAArrayMultiploArray(AArrayMultiploArray node);
    void caseAArrayBaseArray(AArrayBaseArray node);
    void caseAParray(AParray node);
    void caseAMenorExpressaoSimples(AMenorExpressaoSimples node);
    void caseAMenorigualExpressaoSimples(AMenorigualExpressaoSimples node);
    void caseAMaiorExpressaoSimples(AMaiorExpressaoSimples node);
    void caseAMaiorigualExpressaoSimples(AMaiorigualExpressaoSimples node);
    void caseAIgualExpressaoSimples(AIgualExpressaoSimples node);
    void caseADifExpressaoSimples(ADifExpressaoSimples node);
    void caseAAditivaExpressaoSimples(AAditivaExpressaoSimples node);
    void caseASubtrativaExpressaoSimples(ASubtrativaExpressaoSimples node);
    void caseAMultiplicativaExpressaoSimples(AMultiplicativaExpressaoSimples node);
    void caseADivisaoExpressaoSimples(ADivisaoExpressaoSimples node);
    void caseAExpressaoExpressaoSimples(AExpressaoExpressaoSimples node);
    void caseAVariavelExpressaoSimples(AVariavelExpressaoSimples node);
    void caseAChamadaExpressaoSimples(AChamadaExpressaoSimples node);
    void caseANumeroExpressaoSimples(ANumeroExpressaoSimples node);
    void caseAListaArgs(AListaArgs node);
    void caseAVazioArgs(AVazioArgs node);
    void caseAListaListaArgs(AListaListaArgs node);
    void caseAExpressaoListaArgs(AExpressaoListaArgs node);

    void caseTComentarioLinha(TComentarioLinha node);
    void caseTComentarioE(TComentarioE node);
    void caseTComentarioCorpo(TComentarioCorpo node);
    void caseTComentarioD(TComentarioD node);
    void caseTAsterisco(TAsterisco node);
    void caseTBarra(TBarra node);
    void caseTIf(TIf node);
    void caseTElse(TElse node);
    void caseTInt(TInt node);
    void caseTString(TString node);
    void caseTReturn(TReturn node);
    void caseTVoid(TVoid node);
    void caseTWhile(TWhile node);
    void caseTInput(TInput node);
    void caseTOutput(TOutput node);
    void caseTMain(TMain node);
    void caseTId(TId node);
    void caseTNum(TNum node);
    void caseTStr(TStr node);
    void caseTBranco(TBranco node);
    void caseTMais(TMais node);
    void caseTMenos(TMenos node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTMenor(TMenor node);
    void caseTMenorIgual(TMenorIgual node);
    void caseTMaior(TMaior node);
    void caseTMaiorIgual(TMaiorIgual node);
    void caseTIgualdade(TIgualdade node);
    void caseTDiferente(TDiferente node);
    void caseTAtribuicao(TAtribuicao node);
    void caseTPontoVirgula(TPontoVirgula node);
    void caseTVirgula(TVirgula node);
    void caseTParenteseE(TParenteseE node);
    void caseTParenteseD(TParenteseD node);
    void caseTColcheteE(TColcheteE node);
    void caseTColcheteD(TColcheteD node);
    void caseTChaveE(TChaveE node);
    void caseTChaveD(TChaveD node);
    void caseTIdfunc(TIdfunc node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
