/* This file was generated by SableCC (http://www.sablecc.org/). */

package Cmenos.analysis;

import Cmenos.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAListaPrograma(AListaPrograma node);
    void caseAListaListaDeclaracoes(AListaListaDeclaracoes node);
    void caseADeclaracaoListaDeclaracoes(ADeclaracaoListaDeclaracoes node);
    void caseAVariavelDeclaracao(AVariavelDeclaracao node);
    void caseAFuncaoDeclaracao(AFuncaoDeclaracao node);
    void caseAVariavelDec(AVariavelDec node);
    void caseATVoidTipo(ATVoidTipo node);
    void caseATIntTipo(ATIntTipo node);
    void caseATStrTipo(ATStrTipo node);
    void caseAFuncaoDec(AFuncaoDec node);
    void caseAListaParametros(AListaParametros node);
    void caseAVazioParametros(AVazioParametros node);
    void caseAParametrosListaParametros(AParametrosListaParametros node);
    void caseAParametroListaParametros(AParametroListaParametros node);
    void caseASimplesParametro(ASimplesParametro node);
    void caseAMatrizParametro(AMatrizParametro node);
    void caseABaseParray(ABaseParray node);
    void caseAGeralParray(AGeralParray node);
    void caseADeclaracoesLocaisCompostoDec(ADeclaracoesLocaisCompostoDec node);
    void caseAListaDeclaracoesLocais(AListaDeclaracoesLocais node);
    void caseAVazioDeclaracoesLocais(AVazioDeclaracoesLocais node);
    void caseAListaListaComandos(AListaListaComandos node);
    void caseAVazioListaComandos(AVazioListaComandos node);
    void caseAExpressaoComando(AExpressaoComando node);
    void caseAComandosComando(AComandosComando node);
    void caseAIfComando(AIfComando node);
    void caseAIfThenElseComando(AIfThenElseComando node);
    void caseAIfElseComando(AIfElseComando node);
    void caseABlocoWhileComando(ABlocoWhileComando node);
    void caseARetornoComando(ARetornoComando node);
    void caseAEspressaoEspressaoDec(AEspressaoEspressaoDec node);
    void caseAVazioEspressaoDec(AVazioEspressaoDec node);
    void caseAVazioRetorno(AVazioRetorno node);
    void caseAComExpressaoRetorno(AComExpressaoRetorno node);
    void caseAAtribuicaoExpressao(AAtribuicaoExpressao node);
    void caseAAtribuicaoStrExpressao(AAtribuicaoStrExpressao node);
    void caseASimplesExpressao(ASimplesExpressao node);
    void caseAIdSimplesVar(AIdSimplesVar node);
    void caseAIdArrayVar(AIdArrayVar node);
    void caseAArrayMultiploArray(AArrayMultiploArray node);
    void caseAArrayBaseArray(AArrayBaseArray node);
    void caseAComparativoExpressaoSimples(AComparativoExpressaoSimples node);
    void caseAAditivaExpressaoSimples(AAditivaExpressaoSimples node);
    void caseAMenorComparacao(AMenorComparacao node);
    void caseAMenorigualComparacao(AMenorigualComparacao node);
    void caseAMaiorComparacao(AMaiorComparacao node);
    void caseAMaiorigualComparacao(AMaiorigualComparacao node);
    void caseAIgualComparacao(AIgualComparacao node);
    void caseADifComparacao(ADifComparacao node);
    void caseASomaSomaExpressao(ASomaSomaExpressao node);
    void caseASubtracaoSomaExpressao(ASubtracaoSomaExpressao node);
    void caseATermoSomaExpressao(ATermoSomaExpressao node);
    void caseAMultTermo(AMultTermo node);
    void caseADivTermo(ADivTermo node);
    void caseAFatorTermo(AFatorTermo node);
    void caseAEspressaoFator(AEspressaoFator node);
    void caseAVariavelFator(AVariavelFator node);
    void caseAChamadaFator(AChamadaFator node);
    void caseANumeroFator(ANumeroFator node);
    void caseAChamada(AChamada node);
    void caseAListaArgs(AListaArgs node);
    void caseAVazioArgs(AVazioArgs node);
    void caseAListaListaArgs(AListaListaArgs node);
    void caseAExpressaoListaArgs(AExpressaoListaArgs node);

    void caseTComentarioLinha(TComentarioLinha node);
    void caseTComentarioE(TComentarioE node);
    void caseTComentarioCorpo(TComentarioCorpo node);
    void caseTComentarioD(TComentarioD node);
    void caseTAsterisco(TAsterisco node);
    void caseTBarra(TBarra node);
    void caseTIf(TIf node);
    void caseTElse(TElse node);
    void caseTInt(TInt node);
    void caseTString(TString node);
    void caseTReturn(TReturn node);
    void caseTVoid(TVoid node);
    void caseTWhile(TWhile node);
    void caseTInput(TInput node);
    void caseTOutput(TOutput node);
    void caseTId(TId node);
    void caseTNum(TNum node);
    void caseTStr(TStr node);
    void caseTBranco(TBranco node);
    void caseTMais(TMais node);
    void caseTMenos(TMenos node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTMenor(TMenor node);
    void caseTMenorIgual(TMenorIgual node);
    void caseTMaior(TMaior node);
    void caseTMaiorIgual(TMaiorIgual node);
    void caseTIgualdade(TIgualdade node);
    void caseTDiferente(TDiferente node);
    void caseTAtribuicao(TAtribuicao node);
    void caseTPontoVirgula(TPontoVirgula node);
    void caseTVirgula(TVirgula node);
    void caseTParenteseE(TParenteseE node);
    void caseTParenteseD(TParenteseD node);
    void caseTColcheteE(TColcheteE node);
    void caseTColcheteD(TColcheteD node);
    void caseTChaveE(TChaveE node);
    void caseTChaveD(TChaveD node);
    void caseTIdfunc(TIdfunc node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
