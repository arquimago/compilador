/* This file was generated by SableCC (http://www.sablecc.org/). */

package Cmenos.analysis;

import java.util.*;
import Cmenos.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrograma(APrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelDecDeclaracao(AVariavelDecDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoDecDeclaracao(AFuncaoDecDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMainDeclaracao(AMainDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioDeclaracao(AVazioDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATVoidTipo(ATVoidTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATIntTipo(ATIntTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATStrTipo(ATStrTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANormalParametro(ANormalParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioParametro(AVazioParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACompostoDec(ACompostoDec node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInputComando(AInputComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOutputComando(AOutputComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpressaoComando(AExpressaoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandosComando(AComandosComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfComando(AIfComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfThenElseComando(AIfThenElseComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoWhileComando(ABlocoWhileComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARetornoComando(ARetornoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARetornoVazioComando(ARetornoVazioComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpressaoExpressaoDec(AExpressaoExpressaoDec node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioExpressaoDec(AVazioExpressaoDec node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtribuicaoExpressao(AAtribuicaoExpressao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtribuicaoStrExpressao(AAtribuicaoStrExpressao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplesExpressao(ASimplesExpressao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioExpressao(AVazioExpressao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdSimplesVar(AIdSimplesVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdArrayVar(AIdArrayVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArrayMultiploArray(AArrayMultiploArray node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArrayBaseArray(AArrayBaseArray node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParray(AParray node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorExpressaoSimples(AMenorExpressaoSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorigualExpressaoSimples(AMenorigualExpressaoSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorExpressaoSimples(AMaiorExpressaoSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorigualExpressaoSimples(AMaiorigualExpressaoSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIgualExpressaoSimples(AIgualExpressaoSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADifExpressaoSimples(ADifExpressaoSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAditivaExpressaoSimples(AAditivaExpressaoSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubtrativaExpressaoSimples(ASubtrativaExpressaoSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiplicativaExpressaoSimples(AMultiplicativaExpressaoSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivisaoExpressaoSimples(ADivisaoExpressaoSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpressaoExpressaoSimples(AExpressaoExpressaoSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelExpressaoSimples(AVariavelExpressaoSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamadaExpressaoSimples(AChamadaExpressaoSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumeroExpressaoSimples(ANumeroExpressaoSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListaArgs(AListaArgs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioArgs(AVazioArgs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListaListaArgs(AListaListaArgs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpressaoListaArgs(AExpressaoListaArgs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioLinha(TComentarioLinha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioE(TComentarioE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioCorpo(TComentarioCorpo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioD(TComentarioD node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAsterisco(TAsterisco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBarra(TBarra node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReturn(TReturn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVoid(TVoid node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInput(TInput node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOutput(TOutput node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMain(TMain node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNum(TNum node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStr(TStr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBranco(TBranco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMais(TMais node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenos(TMenos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenor(TMenor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorIgual(TMenorIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaior(TMaior node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorIgual(TMaiorIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgualdade(TIgualdade node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiferente(TDiferente node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtribuicao(TAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontoVirgula(TPontoVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirgula(TVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParenteseE(TParenteseE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParenteseD(TParenteseD node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColcheteE(TColcheteE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColcheteD(TColcheteD node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTChaveE(TChaveE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTChaveD(TChaveD node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdfunc(TIdfunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
