/* This file was generated by SableCC (http://www.sablecc.org/). */

package Cmenos.analysis;

import java.util.*;
import Cmenos.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclaracoesPrograma(ADeclaracoesPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListaDeclaracoes(AListaDeclaracoes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASDeclaracaoDeclaracoes(ASDeclaracaoDeclaracoes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoCParamSDeclaracao(AFuncaoCParamSDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoSParamSDeclaracao(AFuncaoSParamSDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelSDeclaracao(AVariavelSDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANulaVar(ANulaVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtribuidaVar(AAtribuidaVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMatrizNulaVar(AMatrizNulaVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMatrizAtribuidaVar(AMatrizAtribuidaVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATVoidTipo(ATVoidTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATIntTipo(ATIntTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATStrTipo(ATStrTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMParametrosParametros(AMParametrosParametros node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParametroParametros(AParametroParametros node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParametroParametro(AParametroParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpressaoExpressao(AExpressaoExpressao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermExpressao(ATermExpressao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATTermo(ATTermo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFatTermo(AFatTermo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFFator(AFFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumeroFator(ANumeroFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVNumValor(AVNumValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVFuncValor(AVFuncValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVExpressaoValor(AVExpressaoValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVStrValor(AVStrValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumeroIntNumeroOuFuncao(ANumeroIntNumeroOuFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoGeralNumeroOuFuncao(AFuncaoGeralNumeroOuFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADimensoesRMatriz(ADimensoesRMatriz node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADimensaoRMatriz(ADimensaoRMatriz node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMValoresValores(AMValoresValores node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAUmValorValores(AUmValorValores node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACParamChamaFuncao(ACParamChamaFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASParamChamaFuncao(ASParamChamaFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandosComandos(AComandosComandos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandoComandos(AComandoComandos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamaVarComando(AChamaVarComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamaFuncComando(AChamaFuncComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoWhileComando(ABlocoWhileComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoIfComando(ABlocoIfComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARetornoComando(ARetornoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARVoidRetorno(ARVoidRetorno node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARIntRetorno(ARIntRetorno node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARStrRetorno(ARStrRetorno node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlWhileBlocoWhile(ABlWhileBlocoWhile node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACasaBlocoIf(ACasaBlocoIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANaoCasaBlocoIf(ANaoCasaBlocoIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfCasaDecl(AIfCasaDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOutraCasaDecl(AOutraCasaDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfCasaDecl2(AIfCasaDecl2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOutraCasaDecl2(AOutraCasaDecl2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfNaoCasaDecl(AIfNaoCasaDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACasaNaoCasaNaoCasaDecl(ACasaNaoCasaNaoCasaDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACondCondicao(ACondCondicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValor2(AValor2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioLinha(TComentarioLinha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioE(TComentarioE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioCorpo(TComentarioCorpo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioD(TComentarioD node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAsterisco(TAsterisco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBarra(TBarra node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReturn(TReturn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVoid(TVoid node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInput(TInput node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOutput(TOutput node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNum(TNum node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStr(TStr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBranco(TBranco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSoma(TSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComparador(TComparador node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtribuicao(TAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontoVirgula(TPontoVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirgula(TVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParenteseE(TParenteseE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParenteseD(TParenteseD node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColcheteE(TColcheteE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColcheteD(TColcheteD node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTChaveE(TChaveE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTChaveD(TChaveD node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
