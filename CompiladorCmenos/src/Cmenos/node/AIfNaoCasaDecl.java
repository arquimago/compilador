/* This file was generated by SableCC (http://www.sablecc.org/). */

package Cmenos.node;

import Cmenos.analysis.*;

@SuppressWarnings("nls")
public final class AIfNaoCasaDecl extends PNaoCasaDecl
{
    private TIf _if_;
    private TParenteseE _parenteseE_;
    private PCondicao _condicao_;
    private TParenteseD _parenteseD_;
    private PBlocoIf _blocoIf_;

    public AIfNaoCasaDecl()
    {
        // Constructor
    }

    public AIfNaoCasaDecl(
        @SuppressWarnings("hiding") TIf _if_,
        @SuppressWarnings("hiding") TParenteseE _parenteseE_,
        @SuppressWarnings("hiding") PCondicao _condicao_,
        @SuppressWarnings("hiding") TParenteseD _parenteseD_,
        @SuppressWarnings("hiding") PBlocoIf _blocoIf_)
    {
        // Constructor
        setIf(_if_);

        setParenteseE(_parenteseE_);

        setCondicao(_condicao_);

        setParenteseD(_parenteseD_);

        setBlocoIf(_blocoIf_);

    }

    @Override
    public Object clone()
    {
        return new AIfNaoCasaDecl(
            cloneNode(this._if_),
            cloneNode(this._parenteseE_),
            cloneNode(this._condicao_),
            cloneNode(this._parenteseD_),
            cloneNode(this._blocoIf_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIfNaoCasaDecl(this);
    }

    public TIf getIf()
    {
        return this._if_;
    }

    public void setIf(TIf node)
    {
        if(this._if_ != null)
        {
            this._if_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._if_ = node;
    }

    public TParenteseE getParenteseE()
    {
        return this._parenteseE_;
    }

    public void setParenteseE(TParenteseE node)
    {
        if(this._parenteseE_ != null)
        {
            this._parenteseE_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parenteseE_ = node;
    }

    public PCondicao getCondicao()
    {
        return this._condicao_;
    }

    public void setCondicao(PCondicao node)
    {
        if(this._condicao_ != null)
        {
            this._condicao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._condicao_ = node;
    }

    public TParenteseD getParenteseD()
    {
        return this._parenteseD_;
    }

    public void setParenteseD(TParenteseD node)
    {
        if(this._parenteseD_ != null)
        {
            this._parenteseD_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parenteseD_ = node;
    }

    public PBlocoIf getBlocoIf()
    {
        return this._blocoIf_;
    }

    public void setBlocoIf(PBlocoIf node)
    {
        if(this._blocoIf_ != null)
        {
            this._blocoIf_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._blocoIf_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._if_)
            + toString(this._parenteseE_)
            + toString(this._condicao_)
            + toString(this._parenteseD_)
            + toString(this._blocoIf_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._if_ == child)
        {
            this._if_ = null;
            return;
        }

        if(this._parenteseE_ == child)
        {
            this._parenteseE_ = null;
            return;
        }

        if(this._condicao_ == child)
        {
            this._condicao_ = null;
            return;
        }

        if(this._parenteseD_ == child)
        {
            this._parenteseD_ = null;
            return;
        }

        if(this._blocoIf_ == child)
        {
            this._blocoIf_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._if_ == oldChild)
        {
            setIf((TIf) newChild);
            return;
        }

        if(this._parenteseE_ == oldChild)
        {
            setParenteseE((TParenteseE) newChild);
            return;
        }

        if(this._condicao_ == oldChild)
        {
            setCondicao((PCondicao) newChild);
            return;
        }

        if(this._parenteseD_ == oldChild)
        {
            setParenteseD((TParenteseD) newChild);
            return;
        }

        if(this._blocoIf_ == oldChild)
        {
            setBlocoIf((PBlocoIf) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
