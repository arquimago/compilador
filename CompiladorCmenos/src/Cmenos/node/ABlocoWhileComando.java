/* This file was generated by SableCC (http://www.sablecc.org/). */

package Cmenos.node;

import Cmenos.analysis.*;

@SuppressWarnings("nls")
public final class ABlocoWhileComando extends PComando
{
    private TWhile _while_;
    private TParenteseE _parenteseE_;
    private PExpressao _expressao_;
    private TParenteseD _parenteseD_;
    private PCompostoDec _compostoDec_;

    public ABlocoWhileComando()
    {
        // Constructor
    }

    public ABlocoWhileComando(
        @SuppressWarnings("hiding") TWhile _while_,
        @SuppressWarnings("hiding") TParenteseE _parenteseE_,
        @SuppressWarnings("hiding") PExpressao _expressao_,
        @SuppressWarnings("hiding") TParenteseD _parenteseD_,
        @SuppressWarnings("hiding") PCompostoDec _compostoDec_)
    {
        // Constructor
        setWhile(_while_);

        setParenteseE(_parenteseE_);

        setExpressao(_expressao_);

        setParenteseD(_parenteseD_);

        setCompostoDec(_compostoDec_);

    }

    @Override
    public Object clone()
    {
        return new ABlocoWhileComando(
            cloneNode(this._while_),
            cloneNode(this._parenteseE_),
            cloneNode(this._expressao_),
            cloneNode(this._parenteseD_),
            cloneNode(this._compostoDec_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABlocoWhileComando(this);
    }

    public TWhile getWhile()
    {
        return this._while_;
    }

    public void setWhile(TWhile node)
    {
        if(this._while_ != null)
        {
            this._while_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._while_ = node;
    }

    public TParenteseE getParenteseE()
    {
        return this._parenteseE_;
    }

    public void setParenteseE(TParenteseE node)
    {
        if(this._parenteseE_ != null)
        {
            this._parenteseE_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parenteseE_ = node;
    }

    public PExpressao getExpressao()
    {
        return this._expressao_;
    }

    public void setExpressao(PExpressao node)
    {
        if(this._expressao_ != null)
        {
            this._expressao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expressao_ = node;
    }

    public TParenteseD getParenteseD()
    {
        return this._parenteseD_;
    }

    public void setParenteseD(TParenteseD node)
    {
        if(this._parenteseD_ != null)
        {
            this._parenteseD_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parenteseD_ = node;
    }

    public PCompostoDec getCompostoDec()
    {
        return this._compostoDec_;
    }

    public void setCompostoDec(PCompostoDec node)
    {
        if(this._compostoDec_ != null)
        {
            this._compostoDec_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._compostoDec_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._while_)
            + toString(this._parenteseE_)
            + toString(this._expressao_)
            + toString(this._parenteseD_)
            + toString(this._compostoDec_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._while_ == child)
        {
            this._while_ = null;
            return;
        }

        if(this._parenteseE_ == child)
        {
            this._parenteseE_ = null;
            return;
        }

        if(this._expressao_ == child)
        {
            this._expressao_ = null;
            return;
        }

        if(this._parenteseD_ == child)
        {
            this._parenteseD_ = null;
            return;
        }

        if(this._compostoDec_ == child)
        {
            this._compostoDec_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._while_ == oldChild)
        {
            setWhile((TWhile) newChild);
            return;
        }

        if(this._parenteseE_ == oldChild)
        {
            setParenteseE((TParenteseE) newChild);
            return;
        }

        if(this._expressao_ == oldChild)
        {
            setExpressao((PExpressao) newChild);
            return;
        }

        if(this._parenteseD_ == oldChild)
        {
            setParenteseD((TParenteseD) newChild);
            return;
        }

        if(this._compostoDec_ == oldChild)
        {
            setCompostoDec((PCompostoDec) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
