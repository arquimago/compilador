/* This file was generated by SableCC (http://www.sablecc.org/). */

package Cmenos.node;

import Cmenos.analysis.*;

@SuppressWarnings("nls")
public final class ABlocoWhileComando extends PComando
{
    private PBlocoWhile _blocoWhile_;

    public ABlocoWhileComando()
    {
        // Constructor
    }

    public ABlocoWhileComando(
        @SuppressWarnings("hiding") PBlocoWhile _blocoWhile_)
    {
        // Constructor
        setBlocoWhile(_blocoWhile_);

    }

    @Override
    public Object clone()
    {
        return new ABlocoWhileComando(
            cloneNode(this._blocoWhile_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABlocoWhileComando(this);
    }

    public PBlocoWhile getBlocoWhile()
    {
        return this._blocoWhile_;
    }

    public void setBlocoWhile(PBlocoWhile node)
    {
        if(this._blocoWhile_ != null)
        {
            this._blocoWhile_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._blocoWhile_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._blocoWhile_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._blocoWhile_ == child)
        {
            this._blocoWhile_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._blocoWhile_ == oldChild)
        {
            setBlocoWhile((PBlocoWhile) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
