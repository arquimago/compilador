/* This file was generated by SableCC (http://www.sablecc.org/). */

package Cmenos.node;

import Cmenos.analysis.*;

@SuppressWarnings("nls")
public final class ACasaNaoCasaNaoCasaDecl extends PNaoCasaDecl
{
    private TIf _if_;
    private TParenteseE _parenteseE_;
    private PCondicao _condicao_;
    private TParenteseD _parenteseD_;
    private PCasaDecl _casaDecl_;
    private TElse _else_;
    private PNaoCasaDecl _naoCasaDecl_;

    public ACasaNaoCasaNaoCasaDecl()
    {
        // Constructor
    }

    public ACasaNaoCasaNaoCasaDecl(
        @SuppressWarnings("hiding") TIf _if_,
        @SuppressWarnings("hiding") TParenteseE _parenteseE_,
        @SuppressWarnings("hiding") PCondicao _condicao_,
        @SuppressWarnings("hiding") TParenteseD _parenteseD_,
        @SuppressWarnings("hiding") PCasaDecl _casaDecl_,
        @SuppressWarnings("hiding") TElse _else_,
        @SuppressWarnings("hiding") PNaoCasaDecl _naoCasaDecl_)
    {
        // Constructor
        setIf(_if_);

        setParenteseE(_parenteseE_);

        setCondicao(_condicao_);

        setParenteseD(_parenteseD_);

        setCasaDecl(_casaDecl_);

        setElse(_else_);

        setNaoCasaDecl(_naoCasaDecl_);

    }

    @Override
    public Object clone()
    {
        return new ACasaNaoCasaNaoCasaDecl(
            cloneNode(this._if_),
            cloneNode(this._parenteseE_),
            cloneNode(this._condicao_),
            cloneNode(this._parenteseD_),
            cloneNode(this._casaDecl_),
            cloneNode(this._else_),
            cloneNode(this._naoCasaDecl_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACasaNaoCasaNaoCasaDecl(this);
    }

    public TIf getIf()
    {
        return this._if_;
    }

    public void setIf(TIf node)
    {
        if(this._if_ != null)
        {
            this._if_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._if_ = node;
    }

    public TParenteseE getParenteseE()
    {
        return this._parenteseE_;
    }

    public void setParenteseE(TParenteseE node)
    {
        if(this._parenteseE_ != null)
        {
            this._parenteseE_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parenteseE_ = node;
    }

    public PCondicao getCondicao()
    {
        return this._condicao_;
    }

    public void setCondicao(PCondicao node)
    {
        if(this._condicao_ != null)
        {
            this._condicao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._condicao_ = node;
    }

    public TParenteseD getParenteseD()
    {
        return this._parenteseD_;
    }

    public void setParenteseD(TParenteseD node)
    {
        if(this._parenteseD_ != null)
        {
            this._parenteseD_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parenteseD_ = node;
    }

    public PCasaDecl getCasaDecl()
    {
        return this._casaDecl_;
    }

    public void setCasaDecl(PCasaDecl node)
    {
        if(this._casaDecl_ != null)
        {
            this._casaDecl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._casaDecl_ = node;
    }

    public TElse getElse()
    {
        return this._else_;
    }

    public void setElse(TElse node)
    {
        if(this._else_ != null)
        {
            this._else_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._else_ = node;
    }

    public PNaoCasaDecl getNaoCasaDecl()
    {
        return this._naoCasaDecl_;
    }

    public void setNaoCasaDecl(PNaoCasaDecl node)
    {
        if(this._naoCasaDecl_ != null)
        {
            this._naoCasaDecl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._naoCasaDecl_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._if_)
            + toString(this._parenteseE_)
            + toString(this._condicao_)
            + toString(this._parenteseD_)
            + toString(this._casaDecl_)
            + toString(this._else_)
            + toString(this._naoCasaDecl_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._if_ == child)
        {
            this._if_ = null;
            return;
        }

        if(this._parenteseE_ == child)
        {
            this._parenteseE_ = null;
            return;
        }

        if(this._condicao_ == child)
        {
            this._condicao_ = null;
            return;
        }

        if(this._parenteseD_ == child)
        {
            this._parenteseD_ = null;
            return;
        }

        if(this._casaDecl_ == child)
        {
            this._casaDecl_ = null;
            return;
        }

        if(this._else_ == child)
        {
            this._else_ = null;
            return;
        }

        if(this._naoCasaDecl_ == child)
        {
            this._naoCasaDecl_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._if_ == oldChild)
        {
            setIf((TIf) newChild);
            return;
        }

        if(this._parenteseE_ == oldChild)
        {
            setParenteseE((TParenteseE) newChild);
            return;
        }

        if(this._condicao_ == oldChild)
        {
            setCondicao((PCondicao) newChild);
            return;
        }

        if(this._parenteseD_ == oldChild)
        {
            setParenteseD((TParenteseD) newChild);
            return;
        }

        if(this._casaDecl_ == oldChild)
        {
            setCasaDecl((PCasaDecl) newChild);
            return;
        }

        if(this._else_ == oldChild)
        {
            setElse((TElse) newChild);
            return;
        }

        if(this._naoCasaDecl_ == oldChild)
        {
            setNaoCasaDecl((PNaoCasaDecl) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
