/* This file was generated by SableCC (http://www.sablecc.org/). */

package Cmenos.node;

import Cmenos.analysis.*;

@SuppressWarnings("nls")
public final class AIfThenElseComando extends PComando
{
    private PExpressao _expressao_;
    private PCompostoDec _v_;
    private PCompostoDec _f_;

    public AIfThenElseComando()
    {
        // Constructor
    }

    public AIfThenElseComando(
        @SuppressWarnings("hiding") PExpressao _expressao_,
        @SuppressWarnings("hiding") PCompostoDec _v_,
        @SuppressWarnings("hiding") PCompostoDec _f_)
    {
        // Constructor
        setExpressao(_expressao_);

        setV(_v_);

        setF(_f_);

    }

    @Override
    public Object clone()
    {
        return new AIfThenElseComando(
            cloneNode(this._expressao_),
            cloneNode(this._v_),
            cloneNode(this._f_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIfThenElseComando(this);
    }

    public PExpressao getExpressao()
    {
        return this._expressao_;
    }

    public void setExpressao(PExpressao node)
    {
        if(this._expressao_ != null)
        {
            this._expressao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expressao_ = node;
    }

    public PCompostoDec getV()
    {
        return this._v_;
    }

    public void setV(PCompostoDec node)
    {
        if(this._v_ != null)
        {
            this._v_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._v_ = node;
    }

    public PCompostoDec getF()
    {
        return this._f_;
    }

    public void setF(PCompostoDec node)
    {
        if(this._f_ != null)
        {
            this._f_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._f_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expressao_)
            + toString(this._v_)
            + toString(this._f_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expressao_ == child)
        {
            this._expressao_ = null;
            return;
        }

        if(this._v_ == child)
        {
            this._v_ = null;
            return;
        }

        if(this._f_ == child)
        {
            this._f_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expressao_ == oldChild)
        {
            setExpressao((PExpressao) newChild);
            return;
        }

        if(this._v_ == oldChild)
        {
            setV((PCompostoDec) newChild);
            return;
        }

        if(this._f_ == oldChild)
        {
            setF((PCompostoDec) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
